name: CI/CD Pipeline for TodoList App

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  IMAGE_NAME: todolist-app
  REGISTRY: ghcr.io

jobs:
  # Job 1: Build and Test
  build-and-test:
    name: Build and Test Application
    runs-on: ubuntu-latest
    
    steps:
    # Step 1: Checkout code
    - name: Checkout code
      uses: actions/checkout@v4
      
    # Step 2: Set up Node.js
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    # Step 3: Install dependencies
    - name: Install dependencies
      run: npm install
    
    # Step 4: Run tests (basic for now)
    - name: Run tests
      run: |
        echo "Running basic validation tests..."
        node -e "console.log('‚úÖ Node.js version:', process.version)"
        npm test
    
    # Step 5: Verify application starts
    - name: Verify application startup
      run: |
        timeout 10s npm start &
        sleep 5
        curl -f http://localhost:3000/health || exit 1
        echo "‚úÖ Application started successfully!"

  # Job 2: Build and Push Docker Image
  build-docker-image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: build-and-test  # This job depends on build-and-test success
    
    # Only run on main branch pushes (not pull requests)
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    
    permissions:
      contents: read
      packages: write
    
    steps:
    # Step 1: Checkout code
    - name: Checkout code
      uses: actions/checkout@v4
    
    # Step 2: Log in to GitHub Container Registry
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    # Step 3: Extract metadata for Docker
    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
    
    # Step 4: Build Docker image
    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    # Step 5: Output image info
    - name: Show Docker image info
      run: |
        echo "‚úÖ Docker image built and pushed successfully!"
        echo "Image tags: ${{ steps.meta.outputs.tags }}"

  # Job 3: Deployment (Basic - we'll enhance this)
  deploy:
    name: Deploy Application
    runs-on: ubuntu-latest
    needs: build-docker-image
    
    # Only deploy on main branch
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    
    steps:
    # Step 1: Checkout code
    - name: Checkout code
      uses: actions/checkout@v4
    
    # Step 2: Deploy notification
    - name: Deployment successful
      run: |
        echo "üöÄ Application ready for deployment!"
        echo "Docker image: ghcr.io/${{ github.repository_owner }}/todolist-app:latest"
        echo "üìù Next steps: Deploy to Kubernetes, AWS, Azure, etc."
        echo "‚úÖ CI/CD Pipeline completed successfully!"